package com.epam.rd.java.basic.practice3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Part1 {

    private static final java.security.SecureRandom random = new java.security.SecureRandom();

    public static void main(String[] args) {
        String input = Util.getInput("part1.txt");
        Demo.print("PART1");
        Demo.print(' ');
        Demo.print("Convert1 result: " + System.lineSeparator() + convert1(input));
        Demo.print(' ');
        Demo.print("Convert2 result: " + System.lineSeparator() + convert2(input));
        Demo.print(' ');
        Demo.print("Convert3 result: " + System.lineSeparator() + convert3(input));
        Demo.print(' ');
        Demo.print("Convert4 result: " + System.lineSeparator() + convert4(input));
        Demo.print(System.lineSeparator());
    }

    // <login>: <email>
    public static String convert1(String input) {
        StringBuilder stringBuilder = new StringBuilder();

        for (int i = 1; i < getLinesNumber(input); i++) {
            stringBuilder.append(getLogin(input, i)).append(": ");
            stringBuilder.append(getEmail(input, i)).append(System.lineSeparator());
        }

        return stringBuilder.toString();
    }

    // <name> (email: <email>)
    public static String convert2(String input) {
        StringBuilder stringBuilder = new StringBuilder();

        for (int i = 1; i < getLinesNumber(input); i++) {
            stringBuilder.append(reverseName(getName(input, i))).append(" (email: ");
            stringBuilder.append(getEmail(input, i)).append(')').append(System.lineSeparator());
        }

        return stringBuilder.toString();
    }

    // <email domain> ===> <logins>
    public static String convert3(String input) {
        StringBuilder stringBuilder = new StringBuilder();

        for (int i = 1; i < getLinesNumber(input); i++) {
            String domain = getDomain(input, i);
            if (stringBuilder.toString().contains(java.util.Objects.requireNonNull(domain))) {
                continue;
            }
            stringBuilder.append(domain).append(" ==> ");
            for (int j = 0; j < getLinesNumber(input); j++) {
                if (domain.equals(getDomain(input, j))) {
                    stringBuilder.append(getLogin(input, j)).append(", ");
                }
            }
            stringBuilder.delete(stringBuilder.length() - 2, stringBuilder.length());
            stringBuilder.append(System.lineSeparator());
        }

        return stringBuilder.toString();
    }

    // add autogenerated password column
    public static String convert4(String input) {
        StringBuilder stringBuilder = new StringBuilder();

        for (int i = 0; i < getLinesNumber(input); i++) {
            stringBuilder.
                    append(getLogin(input, i)).append(';').
                    append(getName(input, i)).append(';').
                    append(getEmail(input, i)).append(';');
            if (stringBuilder.toString().contains(System.lineSeparator())) {
                for (int j = 0; j < 4; j++) {
                    stringBuilder.append(random.nextInt(10));
                }
            } else {
                stringBuilder.append("Password");
            }
            stringBuilder.append(System.lineSeparator());
        }
        return stringBuilder.toString().trim();
    }

    private static String getLogin(String input, int line) {
        int i = 0;
        for (String lineString : input.split(System.lineSeparator())) {
            if (i == line) {
                Matcher matcher = getMatcher(".+?;", lineString);
                if (matcher.find()) {
                    return lineString.substring(matcher.start(), matcher.end() - 1);
                }
            }
            i++;
        }
        return null;
    }

    private static String getName(String input, int line) {
        int i = 0;
        for (String lineString : input.split(System.lineSeparator())) {
            if (i == line) {
                Matcher matcher = getMatcher(";.+;", lineString);
                if (matcher.find()) {
                    return lineString.substring(matcher.start() + 1, matcher.end() - 1);
                }
            }
            i++;
        }
        return "";
    }

    private static String getEmail(String input, int line) {
        int i = 0;
        for (String lineString : input.split(System.lineSeparator())) {
            if (i == line) {
                Matcher matcher = getMatcher(";.+;.+@.+", lineString);
                if (matcher.find()) {
                    lineString = lineString.substring(matcher.start() + 1, matcher.end());
                    matcher = getMatcher(";.+@.+", lineString);
                    if (matcher.find()) {
                        return lineString.substring(matcher.start() + 1, matcher.end());
                    }
                }
            }
            i++;
        }
        return null;
    }

    private static String getDomain(String input, int line) {
        int i = 0;
        for (String lineString : input.split(System.lineSeparator())) {
            if (i == line) {
                Matcher matcher = getMatcher("@.+", lineString);
                if (matcher.find()) {
                    return lineString.substring(matcher.start() + 1, matcher.end());
                }
            }
            i++;
        }
        return null;
    }

    private static String reverseName(String name) {
        return name.split(" ")[1] + " " + name.split(" ")[0];
    }

    private static int getLinesNumber(String input) {
        return input.split(System.lineSeparator()).length;
    }

    private static Matcher getMatcher(String regex, String text) {
        return Pattern.compile(regex).matcher(text);
    }
}